/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/algae.js":
/*!**********************!*\
  !*** ./src/algae.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Algae; }\n/* harmony export */ });\n/* harmony import */ var _floater__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./floater */ \"./src/floater.js\");\n\n\n\nclass Algae extends _floater__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Algae\" + id\n        this.img = new Image()\n        this.img.src = './dist/art/algae.png'\n        this.height = 8\n        this.width = 8\n        this.pos = this.placer()\n        this.bobCoef = Math.floor(Math.random() * 10) + 4\n        this.bobSpeed = (Math.floor(Math.random() * 3) +.1)/30\n        this.trackCoef = 0\n        this.up = [true, false][Math.floor(Math.random() * 2)]\n        this.energyVal = 5\n    }\n\n    placer() {\n        let pos = []\n        pos[0] = Math.floor(Math.random() * this.arenaWidth) - this.width\n        pos[1] = Math.floor(Math.random() * this.arenaHeight / 2) + (this.arenaHeight / 2) - this.height\n        return pos\n    }\n\n    \n\n}\n\n//# sourceURL=webpack://jsproj/./src/algae.js?");

/***/ }),

/***/ "./src/crab.js":
/*!*********************!*\
  !*** ./src/crab.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Crab; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizen.js\");\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./swimmer */ \"./src/swimmer.js\");\n\n\n\nclass Crab extends _swimmer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Crab\" + id\n        this.img = new Image()\n        this.img.src = './dist/art/crab.png'\n        this.height = 15\n        this.width = 30\n        this.pos = [Math.floor(Math.random() * this.arenaWidth - this.width), this.arenaHeight - this.height]\n        this.speed = Math.floor(Math.random() * 4)/10\n        this.maxSpeed = .4\n        this.up = false\n        this.right = [true, false][Math.floor(Math.random() * 2)]\n        this.recentlySwitchedDirections = false\n        this.climbSeaweed = false\n        this.seaweedSpots = this.seaweedFinder()\n\n    }\n\n    seaweedFinder() {\n        let seaweedPos = []\n        Object.values(this.logic.seaweedClusters).forEach((seaweedCluster) => {\n            seaweedPos.push(seaweedCluster.pos[0] + Object.values(seaweedCluster.seaweed)[0].width/2)\n        })\n        return seaweedPos\n    }\n\n    movementSwitchTimer() {\n        setTimeout(() => {\n            this.timeToSwitchMovement = true\n            this.movementSwitchTimer()\n        }, Math.floor(Math.random() * 2500) + 7000)\n    }\n\n    coreloop() {\n        this.move()\n        this.draw()\n    }\n\n\n    draw(){\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n    }\n\n    move() {\n        //find a way so that this isn't running all the time\n        if (this.seaweedSpots.includes(Math.floor(this.pos[0])) ) {\n            this.up = true\n        }\n\n        if(this.up) {\n           this.pos[1] -= this.speed\n           return \n        }\n\n        if (this.pos[0] > this.arenaWidth - this.width || this.pos[0] < 0) {\n            this.switchDirections()\n        }\n\n        if (this.right) {\n            this.pos[0] += this.speed\n        } else {\n            this.pos[0] -= this.speed \n        }\n\n        if (this.timeToSwitchMovement) {\n            Object.values(this.movementSwitches)[Math.floor(Math.random() * Object.values(this.movementSwitches).length)]()\n            this.timeToSwitchMovement = false\n        }\n        \n    }\n\n    movementSwitches = {\n\n        reverseSide: () => {\n            this.right = !this.right;\n        },\n\n        reverseSide2: () => {\n            this.right = !this.right;\n        },\n\n        speedUp: () => {\n            if (this.speed < this.maxSpeed) this.speed += .05\n        },\n\n        slowDown: () => {\n            if (this.speed > .1) this.speed -= .05\n        },\n\n        chill: () => {\n            this.speed = 0\n            setTimeout(()=>{\n                this.speed = .3\n            },Math.floor(Math.random() * 9000) +  1000)\n        }\n    }\n\n    switchDirections() {\n        if (this.recentlySwitchedDirections) return\n        this.right = !this.right;\n        this.recentlySwitchedDirections = true\n        setTimeout(() => { this.recentlySwitchedDirections = false }, 350)\n    }\n\n\n\n\n}\n\n\n\n//# sourceURL=webpack://jsproj/./src/crab.js?");

/***/ }),

/***/ "./src/deadCreature.js":
/*!*****************************!*\
  !*** ./src/deadCreature.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DeadCreature; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizen.js\");\n\n\nclass DeadCreature extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic, pos, options) {\n        super(ctx, canvas, view, logic)\n        this.id = \"DeadCreature\" + id\n        this.pos = [pos[0], pos[1]]\n        this.driftSpeed = .2\n        this.img = new Image()\n        this.type = options.type\n        this.width;\n        this.height;\n        this.typeSelector()\n    }\n\n    coreloop() {\n        if (this.pos[1] < this.arenaHeight - this.height) this.pos[1] += this.driftSpeed\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n    }\n\n    typeSelector() {\n\n        switch(this.type) {\n            case \"Spawn\":\n                this.img.src = './dist/art/fishdead.png'\n                this.width = 12\n                this.height = 8\n                break\n\n            case \"Fish\":\n                this.img.src = './dist/art/fishdead.png'\n                this.width = 25\n                this.height = 16\n                break\n\n            default: \n                this.img.src = './dist/art/fishdead.png'\n        }\n\n    }\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/deadCreature.js?");

/***/ }),

/***/ "./src/denizen.js":
/*!************************!*\
  !*** ./src/denizen.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Denizen; }\n/* harmony export */ });\nclass Denizen {\n\n    constructor(ctx, canvas, view, logic) {\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.logic = logic\n        this.dead = false\n        this.arenaHeight = this.view.arenaHeight\n        this.arenaWidth = this.view.arenaWidth\n        this.offset = this.view.offset\n    }\n    \n\n    collisionDetector(pos1, pos2) {\n        let [[pos1x, pos1y], [dim1x, dim1y]] = pos1\n        let [[pos2x, pos2y], [dim2x, dim2y]] = pos2\n\n        if (\n            pos1x < pos2x + dim2x &&\n            pos1x + dim1x > pos2x &&\n            pos1y < pos2y + dim2y &&\n            dim1y + pos1y > pos2y\n        ) {\n            return true\n        }\n        return false\n    }\n\n}\n\n\n//# sourceURL=webpack://jsproj/./src/denizen.js?");

/***/ }),

/***/ "./src/effect.js":
/*!***********************!*\
  !*** ./src/effect.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Effect; }\n/* harmony export */ });\n\n\nclass Effect {\n    constructor(type, pos, ctx, canvas, view) {\n        this.type = type\n        this.pos = pos\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.size = 10\n        this.coef1 = 0\n        this.coef2 = 0\n        this.dead = false\n    }\n\n    coreloop() {\n        switch(this.type) {\n            case \"bloodSpurt\":\n                this.bloodSpurt()\n                break\n\n            default:\n                return\n        }\n\n    }\n\n    bloodSpurt() {\n        this.ctx.fillStyle = 'rgba(255,0,0,1)';\n        this.ctx.fillRect(this.pos[0] + this.coef1 + this.view.offset[0], this.pos[1] + this.coef2 + this.view.offset[1], this.size, this.size)\n        this.ctx.fillRect(this.pos[0] + this.coef1 + this.view.offset[0], this.pos[1] - this.coef2 + this.view.offset[1], this.size, this.size)\n        this.ctx.fillRect(this.pos[0] - this.coef1 + this.view.offset[0], this.pos[1] + this.coef2 + this.view.offset[1], this.size, this.size)\n        this.ctx.fillRect(this.pos[0] - this.coef1 + this.view.offset[0], this.pos[1] - this.coef2 + this.view.offset[1], this.size, this.size)\n        this.coef1 += .7\n        this.coef2 += .7\n        this.size -= .3\n        if (this.size < 0) this.dead = true\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/effect.js?");

/***/ }),

/***/ "./src/fish.js":
/*!*********************!*\
  !*** ./src/fish.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Fish; }\n/* harmony export */ });\n/* harmony import */ var _fishegg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fishegg */ \"./src/fishegg.js\");\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./swimmer */ \"./src/swimmer.js\");\n\n\n\n\nclass Fish extends _swimmer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, pos, spawn) {\n        super(ctx, canvas, view, logic)\n\n        this.id = \"Fish\" + id\n\n        this.leftImg.src = './dist/art/fishleft.png'\n        this.rightImg.src = './dist/art/fishright.png'\n        this.mateHeart = new Image()\n        this.mateHeart.src = './dist/art/red-heart.png'\n        this.speed = (Math.floor(Math.random() * 5) +1 )/10\n        this.width = spawn ? 12 : 25\n        this.height = spawn ? 8 : 16\n        this.pos = pos || this.placer()\n        this.oldPos = this.pos\n        this.mouthSize = spawn ? 4 : 8\n        this.mouthPos = this.mouthPlacer()\n        this.movement1 = this.moveSelector()\n        this.movement2 = this.moveSelector()\n        this.moveChangerOne()\n        this.moveChangerTwo()\n\n        this.maxEnergy = 20\n        this.energy = this.maxEnergy\n        this.energyUseCoef = .005\n        this.matingThreshold = 15\n        this.matingEnergyCost = 5\n        this.maxSpeed = spawn ? .3 : .6\n\n        this.energyVal = spawn ? 5 : 20\n\n        this.mating = false\n        this.spawn = spawn ? true : false\n        this.foodEaten = 0\n        this.eatFoodThreshold = 15\n\n        this.hunting = false\n        this.nearestFoodCords = []\n\n        this.fleeDistanceThreshold = 200\n        this.fleeing = false\n        this.fleeFromCoords = []\n\n        \n    }\n\n    growUp() {\n        this.spawn = false\n        this.maxSpeed = .6\n        this.mouthSize = 8\n        this.width = 25\n        this.height = 16\n        this.energyVal = 20\n    }\n\n    mouthPlacer() {\n        let mouthPos = []\n        if (!this.right) {\n            mouthPos = [this.pos[0], this.pos[1] + (this.height / 2)]\n        } else {\n            mouthPos = [this.pos[0] + (this.width - this.mouthSize), this.pos[1] + (this.height / 2)]\n        }\n        return mouthPos\n    }\n\n    imgSelector() {\n       return this.right ? this.rightImg : this.leftImg \n    }\n    \n    placer() {\n        let pos = []\n        pos[0] = Math.floor(Math.random() * (this.arenaWidth- this.width))\n        pos[1] = Math.floor(Math.random() * (this.arenaHeight - this.height)) \n        return pos\n    }\n\n    coreloop() {\n        this.move()\n        this.consumeEnergy()\n        if (this.dead) this.becomeCorpse()\n        this.draw()\n    }\n\n    draw() {\n        this.ctx.fillStyle = 'rgba(0,225,225,1)';\n        this.ctx.globalAlpha = this.energy > 7 ? 1 : (this.energy + 3) / 10\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        if (this.mating) this.ctx.drawImage(this.mateHeart, this.mouthPos[0] + this.offset[0], this.mouthPos[1] + this.offset[1] - this.width, 15, 15)\n        if (this.view.debugging) {\n            this.drawMouths()\n            this.drawId()\n        }\n        this.ctx.globalAlpha = 1\n    }\n\n    drawMouths() {\n        //debugging function\n        this.ctx.fillRect(this.mouthPos[0] + this.offset[0], this.mouthPos[1] + this.offset[1], this.mouthSize, this.mouthSize)\n    }\n\n    drawId() {\n        //debugging function\n        this.ctx.fillStyle = 'rgba(0,0,0,1)';\n        this.ctx.font = \"12px serif\";\n        this.ctx.fillText(`${this.id}`, this.pos[0], this.pos[1])\n    }\n\n    mate(spawnBool) {\n        this.mating = true\n        this.speed = 0\n        this.energy -= this.matingEnergyCost\n        setTimeout(()=>{\n            this.speed += .5\n            this.mating = false\n            if (spawnBool) return\n            let i = Math.floor(Math.random() * 6)\n            while (i > 0) {\n                i--\n                this.logic.eggCount += 1\n                this.logic.eggs[this.logic.eggCount] = new _fishegg__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.logic.eggCount, [this.pos[0], this.pos[1]], this.ctx, this.canvas, this.view, this.logic)\n            }\n        }, 1500)\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/fish.js?");

/***/ }),

/***/ "./src/fishegg.js":
/*!************************!*\
  !*** ./src/fishegg.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Fishegg; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizen.js\");\n/* harmony import */ var _fish__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fish */ \"./src/fish.js\");\n/* harmony import */ var _floater__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./floater */ \"./src/floater.js\");\n\n\n\n\nclass Fishegg extends _floater__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n\n    constructor(id, pos, ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Fishegg\" + id\n        this.pos = pos\n        this.img = new Image()\n        this.img.src = './dist/art/fishEggs.png'\n        this.spawn()\n        this.dims = Math.floor(Math.random() * 5) + 20\n        this.height = this.dims\n        this.width = this.dims\n    }\n\n    spawn() {\n        setTimeout(()=>{\n            this.dead = true\n            this.logic.fishCount += 1\n            this.logic.fishes[this.logic.fishCount] = new _fish__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.logic.fishCount, this.ctx, this.canvas, this.view, this.logic, [this.pos[0], this.pos[1]], \"spawn\")\n        },10000)\n    }\n}\n\n//# sourceURL=webpack://jsproj/./src/fishegg.js?");

/***/ }),

/***/ "./src/floater.js":
/*!************************!*\
  !*** ./src/floater.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Floater; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizen.js\");\n\n\n\nclass Floater extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.bobCoef = Math.floor(Math.random() * 10) + 4\n        this.bobSpeed = (Math.floor(Math.random() * 3) + .1) / 30\n        this.trackCoef = 0\n        this.up = [true, false][Math.floor(Math.random() * 2)]\n    }\n\n    coreloop() {\n        this.bob()\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n        if (this.view.debugging) {\n            this.ctx.fillStyle = 'rgba(0,0,0,1)';\n            this.ctx.font = \"12px serif\";\n            this.ctx.fillText(`${this.pos[1]}`, this.pos[0], this.pos[1])\n        }\n    }\n\n    bob() {\n        if (this.up) {\n            this.trackCoef -= this.bobSpeed\n            this.pos[1] -= this.bobSpeed\n        } else {\n            this.trackCoef += this.bobSpeed\n            if (!(this.pos[1] > (this.canvas.height - this.height))) {\n                this.pos[1] += this.bobSpeed\n            }\n        }\n\n        if (this.trackCoef > this.bobCoef) {\n            this.up = true\n        }\n\n        if (this.trackCoef < 0) {\n            this.up = false\n        }\n\n    }\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/floater.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view */ \"./src/view.js\");\n\n\n\nconst canvas = document.getElementById('canvas1')\ncanvas.height = 666\ncanvas.width = 1000\n\nconst view = new _view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas)\n\n\n\n\n//# sourceURL=webpack://jsproj/./src/index.js?");

/***/ }),

/***/ "./src/input.js":
/*!**********************!*\
  !*** ./src/input.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ InputHandler; }\n/* harmony export */ });\n\r\nclass InputHandler {\r\n\r\n    constructor(){\r\n        this.keys = [];\r\n        window.addEventListener('keydown', e => {\r\n            if((e.code === 'ArrowDown' ||\r\n                e.code === 'ArrowUp' ||\r\n                e.code === 'ArrowLeft' ||\r\n                e.code === 'ArrowRight' ||\r\n                e.code === \"Space\")\r\n            && this.keys.indexOf(e.code) === -1){\r\n                this.keys.push(e.code);\r\n            }\r\n            e.preventDefault();\r\n        });\r\n\r\n        window.addEventListener('keyup', e => {\r\n            if (e.code === 'ArrowDown' ||\r\n                e.code === 'ArrowUp' ||\r\n                e.code === 'ArrowLeft' ||\r\n                e.code === 'ArrowRight' ||\r\n                e.code === \"Space\") {\r\n                this.keys.splice(this.keys.indexOf(e.code), 1);\r\n            }\r\n            e.preventDefault();\r\n        })\r\n    }\r\n}\n\n//# sourceURL=webpack://jsproj/./src/input.js?");

/***/ }),

/***/ "./src/logic.js":
/*!**********************!*\
  !*** ./src/logic.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Logic; }\n/* harmony export */ });\n/* harmony import */ var _fish__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fish */ \"./src/fish.js\");\n/* harmony import */ var _algae__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algae */ \"./src/algae.js\");\n/* harmony import */ var _shark__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shark */ \"./src/shark.js\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./effect */ \"./src/effect.js\");\n/* harmony import */ var _input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./input */ \"./src/input.js\");\n/* harmony import */ var _seaweedCluster__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./seaweedCluster */ \"./src/seaweedCluster.js\");\n/* harmony import */ var _crab__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./crab */ \"./src/crab.js\");\n\n\n\n\n\n\n\n\nclass Logic {\n\n    constructor(ctx, canvas, view) {\n        this.input = new _input__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.effect = new _effect__WEBPACK_IMPORTED_MODULE_3__[\"default\"](ctx, canvas, view)\n        this.fishCount = 20\n        this.fishes = this.tankPopulator(this.fishCount, _fish__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n        this.algaeCount = 100\n        this.algae = this.tankPopulator(this.algaeCount, _algae__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n        this.sharkCount = 2\n        this.sharks = this.tankPopulator(this.sharkCount, _shark__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n        this.eggCount = 0\n        this.eggs = {}\n        this.effectCount = 0\n        this.effects = this.tankPopulator(0, _effect__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n        this.seaweedClusterCount = 10\n        this.seaweedClusters = this.tankPopulator(this.seaweedClusterCount, _seaweedCluster__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n        this.deadCreatureCount = 0\n        this.deadCreatures = {}\n        this.crabCount = 20\n        this.crabs = this.tankPopulator(this.crabCount, _crab__WEBPACK_IMPORTED_MODULE_6__[\"default\"])\n    }\n\n    coreLoop(){\n        this.algaeSpawns()\n        this.fishHuntWhenHungry()\n        this.fishCanFindSomethingElseToEat()\n        this.fishEatAlgae()\n        this.fishMeetOtherFish()\n        this.sharksHuntWhenHungry()\n        this.sharksEatFish()\n        this.fishFleeFromSharks()\n        this.denizensDie([this.fishes,this.algae,this.sharks,this.eggs,this.effects, this.crabs])\n    }\n\n    fishFleeFromSharks() {\n        for (let i = 0; i < Object.values(this.fishes).length; i++) {\n            let fish = Object.values(this.fishes)[i]\n            if (fish.mating) continue\n            if (fish.fleeing) continue\n            this.findNearestPredator(fish, this.sharks)\n        }\n\n    }\n\n    denizensDie(classObjArr){\n        for (let classObj of classObjArr) {\n            for (const [id, denizen] of Object.entries(classObj)) {\n                if (denizen.dead) delete classObj[id]\n            }\n        }\n    }\n\n    sharksHuntWhenHungry() {\n        for (let i = 0; i < Object.values(this.sharks).length; i++) {\n            let shark = Object.values(this.sharks)[i]\n            if (shark.energy > 40) continue\n            if (shark.hunting) continue\n            this.findNearestFood(shark, this.fishes)\n        }\n    }\n\n    sharksEatFish() {\n        for (let i = 0; i < Object.values(this.sharks).length; i++) {\n            let shark = Object.values(this.sharks)[i]\n            if (shark.energy > shark.eatFoodThreshold) continue\n            for (const [id, fish] of Object.entries(this.fishes)) {\n                let eat = shark.collisionDetector([shark.mouthPos, [shark.mouthSize, shark.mouthSize]], [fish.pos, [fish.height, fish.width]])\n                if (eat) {\n                    fish.dead = true\n                    shark.energy = shark.maxEnergy\n                    shark.foodEaten++\n                    shark.hunting = false\n                    this.effectCount++\n                    this.effects[\"Effect\" + this.effectCount] = new _effect__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\"bloodSpurt\", [shark.mouthPos[0], shark.mouthPos[1]], this.ctx, this.canvas, this.view)\n                }\n\n            }\n        }\n    }\n\n    algaeSpawns() {\n        let spawnAlgae = (1 === Math.floor(Math.random() * 200))\n        if (spawnAlgae) {\n            this.algaeCount++\n            this.algae[\"Algae\" + this.algaeCount] = new _algae__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.algaeCount, this.ctx, this.canvas, this.view, this)\n        }\n    }\n\n    fishMeetOtherFish() {\n        for (let i = 0; i < Object.values(this.fishes).length; i++) {\n            let fish1 = Object.values(this.fishes)[i]\n            if (fish1.spawn || fish1.mating) continue\n            if (fish1.energy < fish1.matingThreshold) continue\n\n            for (let j = 0; j < Object.values(this.fishes).length; j++) {\n                if (i === j) continue\n                let fish2 = Object.values(this.fishes)[j]\n                if (fish2.energy < fish2.matingThreshold) continue\n                if (fish2.spawn || fish2.mating) continue\n\n                let bump = fish1.collisionDetector([[fish1.pos[0], fish1.pos[1]], [fish1.width, fish1.height]], [[fish2.pos[0], fish2.pos[1]], [fish2.width, fish2.height]])\n                if (bump) {\n                    fish1.mate(true)\n                    fish2.mate()\n                }\n            }\n        }\n\n    }\n\n\n    fishEatAlgae() {\n\n        for (let i = 0; i < Object.values(this.fishes).length; i++) {\n            let fish = Object.values(this.fishes)[i]\n            if (fish.energy > fish.eatFoodThreshold) continue\n            if (fish.mating) continue\n\n            for (const [id, algae] of Object.entries(this.algae)) {\n                let eat = fish.collisionDetector([fish.mouthPos, [fish.mouthSize, fish.mouthSize]], [algae.pos, [algae.height, algae.width]])\n                if (eat) {\n                    algae.dead = true\n                    fish.energy += algae.energyVal\n                    fish.foodEaten++\n                    fish.hunting = false\n                    if (fish.spawn && fish.foodEaten > 4) {\n                        fish.growUp()\n                    }\n                }\n\n            }\n        }\n    }\n\n    fishHuntWhenHungry() {\n        for (let i = 0; i < Object.values(this.fishes).length; i++) {\n            let fish = Object.values(this.fishes)[i]\n            if (fish.energy > 7) continue\n            if (fish.hunting) continue\n            if (fish.mating) continue\n            this.findNearestFood(fish, this.algae)\n        }\n    }\n\n    findNearestPredator(prey, predatorSpecies) {\n        let fleeFromCoords = []\n        let nearestFoundDistance = Infinity\n\n            for (const [id, predator] of Object.entries(predatorSpecies)) {\n                let xDistance = Math.abs(prey.pos[0] - predator.pos[0])\n                let yDistance = Math.abs(prey.pos[1] - predator.pos[1])\n                if ((xDistance + yDistance) > prey.fleeDistanceThreshold) continue\n                if ((xDistance + yDistance) < nearestFoundDistance) {\n                    nearestFoundDistance = xDistance + yDistance\n                    fleeFromCoords = predator.pos\n                }\n            }\n        if (nearestFoundDistance === Infinity) return\n        prey.fleeing = true\n        prey.fleeFromCoords = fleeFromCoords\n        setTimeout(()=>{\n            prey.fleeing = false\n            prey.fleeFromCoords = []\n        },1000)\n\n    }\n\n    findNearestFood(predator, preySpecies) {\n        let nearestFoodCords = []\n        let nearestFoundDistance = Infinity\n        let foodId;\n\n            for (const [id, prey] of Object.entries(preySpecies)) {\n            let xDistance = Math.abs(predator.pos[0] - prey.pos[0])\n            let yDistance = Math.abs(predator.pos[1] - prey.pos[1])\n\n            if ((xDistance + yDistance) < nearestFoundDistance) {\n                nearestFoundDistance = xDistance + yDistance\n                nearestFoodCords = prey.pos\n                foodId = id\n            }\n        }\n\n        predator.hunting = foodId\n        predator.nearestFoodCords = nearestFoodCords\n    }\n    \n\n\n    fishCanFindSomethingElseToEat() {\n        for (let i = 0; i < Object.values(this.fishes).length; i++) {\n            let fish = Object.values(this.fishes)[i]\n            if (!fish.hunting) continue\n            if (!(fish.hunting in this.algae)) {\n                fish.hunting = false\n                fish.nearestFoodCords = []\n            }\n        }\n    }\n\n\n    tankPopulator(objnum, className, options) {\n        let denizenObj = {}\n\n        while (objnum > 0) {\n            denizenObj[className.name + objnum] = new className(objnum, this.ctx, this.canvas, this.view, this, options)\n            objnum--\n        }\n        return denizenObj\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/logic.js?");

/***/ }),

/***/ "./src/seaweed.js":
/*!************************!*\
  !*** ./src/seaweed.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Seaweed; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizen.js\");\n\n\nclass Seaweed extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(id, ctx, canvas, view, logic, {pos}) {\n        super(ctx, canvas, view, logic)\n        this.id = id\n        this.width = 60 \n        this.height = 80 \n        this.sizeCoef = Math.floor(Math.random() * 15)\n        this.pos = [pos[0] + Math.floor(Math.random() * 10), (this.arenaHeight - this.height) - ((id - 1) * 25)]\n        // this.pos[0] = Math.floor(Math.random() * this.arenaWidth - this.width/2)\n        // this.pos[1] = this.arenaHeight - this.height - Math.floor(Math.random() * 200)\n\n        this.img = new Image()\n        this.img.src = './dist/art/seaweed.png'\n        this.aniStateNames = [\"sway1\", \"sway2\", \"swish\", \"swoosh\"]\n        this.animationState = this.aniStateNames[Math.floor(Math.random() * 2)]\n        this.animations = [];\n\n        //what if seaweed clusters could grow? and then be eaten by something over time.\n\n        this.animationStates = [\n            { name: \"sway1\", frames: 8},\n            { name: \"sway2\", frames: 8},\n            { name: \"swish\", frames: 8 },\n            { name: \"swoosh\", frames: 8 }\n        ];\n\n        this.gameFrame = Math.floor(Math.random() * 100)\n        this.staggerFrame = 40\n\n        this.animationFramesSetter()\n    }\n\n\n    animationFramesSetter() {\n        this.animationStates.forEach((spriteState,index) => {\n            let frames = {\n                loc: [],\n            }\n            for (let j = 0; j < spriteState.frames; j++) {\n                let positionX = j * this.width;\n                let positionY = index * this.height;\n                frames.loc.push({ x: positionX, y: positionY });\n            }\n            this.animations[spriteState.name] = frames;\n        });\n    }\n\n    coreloop() {\n\n        let position = Math.floor((this.gameFrame / this.staggerFrame) % this.animations[this.animationState].loc.length)\n        let frameX = this.width * position;\n        let frameY = this.animations[this.animationState].loc[position].y\n        this.ctx.drawImage(this.img, frameX, frameY, this.width, this.height, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width + this.sizeCoef, this.height + this.sizeCoef)\n        this.gameFrame++\n    }\n\n\n    \n\n    \n}\n\n\n\n\n\n//# sourceURL=webpack://jsproj/./src/seaweed.js?");

/***/ }),

/***/ "./src/seaweedCluster.js":
/*!*******************************!*\
  !*** ./src/seaweedCluster.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SeaweedCluster; }\n/* harmony export */ });\n/* harmony import */ var _seaweed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./seaweed */ \"./src/seaweed.js\");\n\n\nclass SeaweedCluster {\n    constructor(id, ctx, canvas, view, logic) {\n        this.id = id\n        this.ctx = ctx\n        this.canvas = canvas\n        this.view = view\n        this.logic = logic\n\n\n\n        this.pos = [Math.floor( Math.random() * this.view.arenaWidth), 0]\n        this.seaweedCount = Math.floor(Math.random() * 5) + 10\n        this.seaweed = this.logic.tankPopulator(this.seaweedCount, _seaweed__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {pos: this.pos})\n    }\n\n    coreloop() {\n        Object.values(this.seaweed).forEach((seaweed) => {\n            seaweed.coreloop()\n        }) \n    }\n\n\n \n\n}\n\n\n\n//# sourceURL=webpack://jsproj/./src/seaweedCluster.js?");

/***/ }),

/***/ "./src/shark.js":
/*!**********************!*\
  !*** ./src/shark.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Shark; }\n/* harmony export */ });\n/* harmony import */ var _swimmer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./swimmer */ \"./src/swimmer.js\");\n\n\n\nclass Shark extends _swimmer__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(id, ctx, canvas, view, logic, spawn) {\n        super(ctx, canvas, view, logic)\n        this.id = \"Shark\" + id\n\n        this.leftImg.src = './dist/art/sharkleft.png'\n        this.rightImg.src = './dist/art/sharkright.png'\n        this.mateHeart = new Image()\n        this.mateHeart.src = './dist/art/red-heart.png'\n        this.speed = (Math.floor(Math.random() * 5) + 5) / 10\n        this.width = spawn ? 20 : 100\n        this.height = spawn ? 8 : 41\n        this.pos = this.placer()\n        this.oldPos = this.pos\n        this.mouthSize = spawn ? 4 : 12\n        this.mouthPos = this.mouthPlacer()\n        this.movement1 = this.moveSelector()\n        this.movement2 = this.moveSelector()\n        this.moveChangerOne()\n        this.moveChangerTwo()\n\n        this.maxEnergy = 100\n        this.energy = this.maxEnergy\n        this.energyUseCoef = .015\n        this.matingThreshold = 15\n        this.matingEnergyCost = 5\n        this.maxSpeed = spawn ? .3 : 1\n\n        this.mating = false\n        this.spawn = spawn ? true : false\n        this.foodEaten = 0\n        this.eatFoodThreshold = 60\n\n        this.hunting = false\n        this.nearestFoodCords = []\n\n    }\n\n    growUp() {\n        this.spawn = false\n        this.maxSpeed = .6\n        this.mouthSize = 8\n        this.width = 25\n        this.height = 16\n    }\n\n    mouthPlacer() {\n        let mouthPos = []\n        if (!this.right) {\n            mouthPos = [this.pos[0] + 5, this.pos[1] + (this.height / 2)]\n        } else {\n            mouthPos = [this.pos[0] + (this.width - this.mouthSize) - 5, this.pos[1] + (this.height / 2)]\n        }\n        return mouthPos\n    }\n\n    imgSelector() {\n        return this.right ? this.rightImg : this.leftImg\n    }\n\n    placer() {\n        let pos = []\n        pos[0] = Math.floor(Math.random() * (this.arenaWidth - this.width))\n        pos[1] = Math.floor(Math.random() * (this.arenaHeight - this.height))\n        return pos\n    }\n\n    coreloop() {\n        this.move()\n        this.consumeEnergy()\n        this.ctx.fillStyle = 'rgba(0,225,225,1)';\n        this.ctx.globalAlpha = this.energy > 7 ? 1 : (this.energy + 3) / 10\n        this.ctx.drawImage(this.img, this.pos[0] + this.offset[0], this.pos[1] + this.offset[1], this.width, this.height)\n   \n\n        if (this.view.debugging) {\n            this.drawMouths()\n            this.drawId()\n        }\n\n    \n        this.ctx.globalAlpha = 1\n\n    }\n\n    drawMouths() {\n        //debugging function\n        this.ctx.fillRect(this.mouthPos[0], this.mouthPos[1], this.mouthSize, this.mouthSize)\n    }\n\n    drawId() {\n        //debugging function\n        this.ctx.fillStyle = 'rgba(0,0,0,1)';\n        this.ctx.font = \"12px serif\";\n        this.ctx.fillText(`${this.energy}`, this.pos[0], this.pos[1])\n    }\n\n}\n\n//# sourceURL=webpack://jsproj/./src/shark.js?");

/***/ }),

/***/ "./src/swimmer.js":
/*!************************!*\
  !*** ./src/swimmer.js ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Swimmer; }\n/* harmony export */ });\n/* harmony import */ var _denizen__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denizen */ \"./src/denizen.js\");\n/* harmony import */ var _deadCreature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./deadCreature */ \"./src/deadCreature.js\");\n\n\n\nclass Swimmer extends _denizen__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor(ctx, canvas, view, logic) {\n        super(ctx, canvas, view, logic)\n        this.up = [true, false][Math.floor(Math.random() * 2)]\n        this.right = [true, false][Math.floor(Math.random() * 2)]\n        this.leftImg = new Image()\n        this.rightImg = new Image()\n        this.img = this.imgSelector()\n        this.recentlySwitchedDirections = false\n        this.movementSwitchTimer()\n        this.timeToSwitchMovement = false\n    }\n\n    movementSwitchTimer() {\n        setTimeout(()=>{\n            this.timeToSwitchMovement = true\n            this.movementSwitchTimer()\n        },Math.floor(Math.random() * 25000) + 7000)\n    }\n\n    imgSelector() {\n        return this.right ? this.rightImg : this.leftImg\n    }\n\n    //maybe refactor so that moving left and right is an intrinsic state, and the switch happens accordingly to movement \n    // one issue is that the mouthpos changes, which is partially causing the bug\n\n    switchDirections() {\n        if (this.recentlySwitchedDirections) return\n        this.right = !this.right;\n        this.img = this.imgSelector();\n        this.recentlySwitchedDirections = true\n        setTimeout(() => { this.recentlySwitchedDirections = false },350)\n    }\n\n    move() {\n        if (this.pos[0] > this.arenaWidth - this.width || this.pos[0] < 0) {\n            this.switchDirections()\n        }\n        if (this.pos[1] > this.arenaHeight - this.height || this.pos[1] < 0) this.up = !this.up\n        this.mouthPos = this.mouthPlacer();\n\n        if (this.speed < .01) this.speed = .3\n\n        this.oldPos = [this.pos[0], this.pos[1]]\n\n        if (!this.mating && this.hunting) {\n            this.moveTowardsFood()\n            this.fishOrienter()\n            return\n        }\n\n        if (this.fleeing) {\n            this.fleeFromPredator()\n            this.fishOrienter()\n            return\n        }\n\n        if (!this.mating && !this.hunting) {\n            if (this.timeToSwitchMovement){\n                Object.values(this.movementSwitches)[Math.floor(Math.random() * Object.values(this.movementSwitches).length)]()\n                this.timeToSwitchMovement = false\n            }    \n\n            this.movement1();\n            this.movement2();\n            this.fishOrienter()\n        }\n\n\n    }\n\n    fleeFromPredator() {\n        let [xhigh, xlow, yhigh, ylow] = this.inBounds()\n\n\n        if (this.pos[0] > this.fleeFromCoords[0]) {\n            if (xhigh) {\n                this.pos[0] += this.maxSpeed\n            }else {\n                this.pos[0] = this.arenaWidth - this.width\n            }\n        } else {\n            if (xlow) {\n                this.pos[0] -= this.maxSpeed\n            } else {\n                this.pos[0] = 0\n            }\n        }\n\n        if (this.pos[1] > this.fleeFromCoords[1]) {\n            if (yhigh) {\n                this.pos[1] += this.maxSpeed\n            } else {\n                this.pos[1] = this.arenaHeight - this.height\n            }\n        } else {\n            if (ylow) {\n                this.pos[1] -= this.maxSpeed\n            } else {\n                this.pos[1] = 0\n            }\n        }\n\n    }\n\n    inBounds(){\n        let xhigh = true\n        let xlow = true\n        let yhigh = true\n        let ylow = true\n        if (this.pos[0] < 0) xlow = false\n        if (this.pos[0] > this.arenaWidth - this.width) xhigh = false\n        if (this.pos[1] < 0) ylow = false\n        if (this.pos[1] > this.arenaHeight - this.height) yhigh = false\n        return [xhigh, xlow, yhigh, ylow]\n    }\n\n    movementPatterns = {\n        scan: () => {\n            if (this.right) {\n                this.pos[0] += (this.speed / 2)\n            } else {\n                this.pos[0] -= (this.speed / 2)\n            }\n        },\n\n        crissCross: () => {\n            this.movementPatterns.scan()\n            this.movementPatterns.bob()\n        },\n\n        bob: () => {\n            if (this.up) {\n                this.pos[1] += (this.speed / 2)\n            } else {\n                this.pos[1] -= (this.speed / 2)\n            }\n        }\n    }\n\n    movementSwitches = {\n        reverseUp: () => {\n            this.up = !this.up\n        },\n\n        reverseSide: () => {\n            this.right = !this.right;\n            this.img = this.imgSelector();\n        },\n\n        speedUp: () => {\n            if (this.speed < this.maxSpeed) this.speed += .1\n        },\n\n        slowDown: () => {\n            if (this.speed > .3) this.speed -= .1\n        },\n\n        dash: () => {\n            this.speed += .5\n            setTimeout(() => this.speed -= .5, 500)\n        }\n    }\n\n    fishOrienter() {\n        if (this.recentlySwitchedDirections) return\n        if (this.oldPos[0] < this.pos[0]) {\n            this.right = true\n            this.img = this.imgSelector();\n            this.recentlySwitchedDirections = true\n            setTimeout(() => { this.recentlySwitchedDirections = false }, 350)\n        } else {\n            this.right = false\n            this.img = this.imgSelector();\n            this.recentlySwitchedDirections = true\n            setTimeout(() => { this.recentlySwitchedDirections = false }, 350)\n        }\n    }\n\n    moveTowardsFood() {\n\n        let [xhigh, xlow, yhigh, ylow] = this.inBounds()\n\n        if (this.mouthPos[0] < this.nearestFoodCords[0]) {\n            if (xhigh) this.pos[0] += this.maxSpeed \n        } else {\n            if (xlow) this.pos[0] -= this.maxSpeed\n        }\n\n\n\n        if (this.mouthPos[1] < this.nearestFoodCords[1]) {\n            if (yhigh) this.pos[1] += this.maxSpeed\n        } else {\n            if (ylow) this.pos[1] -= this.maxSpeed\n        }\n    \n    }\n\n    moveSelector = () => {\n        return Object.values(this.movementPatterns)[Math.floor(Math.random() * 2)]\n    }\n\n    moveChangerOne() {\n        this.movement1 = this.moveSelector()\n        setTimeout(() => {\n            this.moveChangerOne()\n        }, Math.floor(Math.random() * 3000))\n    }\n\n    moveChangerTwo() {\n        this.movement2 = this.moveSelector()\n        setTimeout(() => {\n            this.moveChangerTwo()\n        }, Math.floor(Math.random() * 3000))\n    }\n\n    consumeEnergy() {\n        this.energy -= this.energyUseCoef * this.speed\n        if (this.energy < .05) this.dead = true\n    }\n\n    becomeCorpse() {\n        this.logic.deadCreatureCount++\n        this.logic.deadCreatures[this.logic.deadCreatureCount] = new _deadCreature__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.logic.deadCreatureCount, this.ctx, this.canvas, this.view, this.logic, this.pos, { type: (this.spawn ? \"Spawn\": \"Fish\")})\n    }\n\n\n\n}\n\n//# sourceURL=webpack://jsproj/./src/swimmer.js?");

/***/ }),

/***/ "./src/view.js":
/*!*********************!*\
  !*** ./src/view.js ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ View; }\n/* harmony export */ });\n/* harmony import */ var _logic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logic */ \"./src/logic.js\");\n\n\nclass View {\n\n    constructor(canvas) {\n        this.canvas = canvas\n        this.ctx = this.canvas.getContext('2d')\n        this.background = new Image()\n        this.background.src = './dist/art/background.jpeg'\n\n        this.arenaCoef = 2\n        this.arenaWidth = this.canvas.width * this.arenaCoef\n        this.arenaHeight = this.canvas.height * this.arenaCoef\n        this.backgroundPos = [-this.arenaWidth/3, -this.arenaHeight/3]\n        this.offset = [-this.arenaWidth / 3, -this.arenaHeight / 3]\n\n\n        this.logic = new _logic__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, this.canvas, this)\n        this.fishes = this.logic.fishes\n        this.algae = this.logic.algae\n        this.eggs = this.logic.eggs\n        this.sharks = this.logic.sharks\n        this.effects = this.logic.effects\n        this.seaweedClusters = this.logic.seaweedClusters\n        this.deadCreatures = this.logic.deadCreatures\n        this.crabs = this.logic.crabs\n\n        this.allDenizensArr = [this.fishes, this.algae, this.eggs, this.sharks, this.effects, this.seaweedClusters, this.crabs, this.deadCreatures]\n\n        this.animate()\n        this.debugging = false\n\n    }\n\n    animate() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n        this.updateCamera(this.logic.input.keys) \n        this.drawBackround()\n        this.drawTextBox()\n        this.drawDenizens()\n        this.logic.coreLoop()\n        requestAnimationFrame(this.animate.bind(this))\n    }\n\n    drawBackround() {\n        this.ctx.drawImage(this.background, this.backgroundPos[0], this.backgroundPos[1], this.arenaWidth, this.arenaHeight)\n        this.ctx.fillStyle = 'rgba(0,0,0,.3)';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    drawTextBox() {\n        this.ctx.fillStyle = 'rgba(0,0,0,.3)';\n        this.ctx.fillRect(10, 10, 200, 120)\n\n        this.ctx.fillStyle = 'rgba(250,110,0,1)';\n        this.ctx.font = \"36px serif\";\n        this.ctx.fillText(`Fishes: ${Object.values(this.logic.fishes).length}`, 25, 50)\n        this.ctx.fillText(`Algae: ${Object.values(this.logic.algae).length}`, 25, 100)\n    }\n\n\n    updateCamera(input) {\n        let xSpeed = 0;\n        let ySpeed = 0;\n\n        if (input.includes('ArrowRight')) {\n            xSpeed = -(1.5)\n        } else if (input.includes('ArrowLeft')) {\n            xSpeed = (1.5)\n        } else {\n            xSpeed = (0)\n        }\n\n        if (input.includes('ArrowUp')) {\n            ySpeed = (1.5)\n        } else if (input.includes('ArrowDown')) {\n            ySpeed = -(1.5)\n        } else {\n            ySpeed = (0)\n        }\n\n        this.offset[0] += xSpeed;\n        this.offset[1] += ySpeed;\n\n        if (this.offset[0] >= 0) this.offset[0] = 0;\n        if (this.offset[0] <= (-this.arenaWidth + this.canvas.width)) this.offset[0] = (-this.arenaWidth + this.canvas.width);\n        if (this.offset[1] >= 0) this.offset[1] = 0;\n        if (this.offset[1] <= (-this.arenaHeight + this.canvas.height)) this.offset[1] = (-this.arenaHeight+ this.canvas.height);\n\n        this.backgroundPos[0] = this.offset[0];\n        this.backgroundPos[1] = this.offset[1];\n    }\n\n    drawDenizens() {\n        this.allDenizensArr.forEach((denizenObj)=>{\n            Object.values(denizenObj).forEach((denizen) => {\n                denizen.coreloop()\n            })\n        })\n    }\n}\n\n\n\n\n//# sourceURL=webpack://jsproj/./src/view.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;